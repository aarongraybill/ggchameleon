% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_configs.R
\name{load_configs}
\alias{load_configs}
\title{Load stylistic configurations from a file}
\usage{
load_configs(config = "default", file = "chameleon.yml")
}
\arguments{
\item{config}{Within \code{file}, which configuration to use. Defaults to
\code{"default"}. Useful if mutliple versions of the same theme are stored in
one configuration file.}

\item{file}{A .yml file. The configuration file to load. Should be created by
\code{\link[=save_current_theme]{save_current_theme()}}. Defaults to \code{chameleon.yml}.}
}
\description{
If you have saved a configurations file using \code{\link[=save_current_theme]{save_current_theme()}}, you may
wish to load those configurations at a later date. \code{load_configs} parses
these configuration files and automatically updates your current ggchameleon
instance so that future charts will have these new configurations applied.
When \code{library(ggchameleon)} is called for the first time, \code{load_configs}
looks for a file called \code{chameleon.yml} and loads the configurations stored
there (the default location of \code{\link[=save_current_theme]{save_current_theme()}}). If you have a
different configuration file that you would like to load, then you can
specify that with the \code{file} argument.
}
\details{
When loading a configuration file, \code{load_configs} edits the contents of \link{the}
using functions like \code{\link[=edit_the_fonts]{edit_the_fonts()}}. The \code{chameleon.yml} file is intended
to be placed at the same level as your working .Rproj file. This way, all of
the charts in this project will have a cohesive style without you having to
specify this style across the multiple files in your project.
}
